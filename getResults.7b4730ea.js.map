{"version":3,"sources":["../../src/comlink.ts","../src/BdSp/Roamers/workers/getResults.js","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/bundle-loader.js","../node_modules/parcel-plugin-wasm.rs/wasm-loader.js"],"names":["expose","calculate_pokemon_bdsp_roamer","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","id","length","Promise","resolve","code","LazyPromise","reject","loadBundles","slice","then","all","map","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","e","executor","promise","prototype","onSuccess","onError"],"mappings":"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","file":"getResults.7b4730ea.js","sourceRoot":"../public","sourcesContent":["/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","import { expose } from 'comlink';\nimport { calculate_pokemon_bdsp_roamer } from '../../../../wasm/Cargo.toml';\n\nexpose(calculate_pokemon_bdsp_roamer);\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","var wasm;const __exports = {};\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n/**\n*/\n__exports. init_panic_hook = function() {\n    wasm.init_panic_hook();\n}\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n/**\n* @param {any} settings\n* @returns {any}\n*/\n__exports. get_wild = function(settings) {\n    try {\n        const ret = wasm.get_wild(addBorrowedObject(settings));\n        return takeObject(ret);\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\nconst u32CvtShim = new Uint32Array(2);\n\nconst uint64CvtShim = new BigUint64Array(u32CvtShim.buffer);\n\nlet cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\n\nfunction getArrayU32FromWasm0(ptr, len) {\n    return getUint32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n\nfunction passArray32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4);\n    getUint32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {BigInt} seed1\n* @param {BigInt} seed2\n* @param {number} tid\n* @param {number} sid\n* @param {number} shiny_filter\n* @param {number} encounter_type\n* @param {boolean} shiny_charm\n* @param {number} nature_filter\n* @param {number} ability_filter\n* @param {number} min\n* @param {number} max\n* @returns {Array<any>}\n*/\n__exports. calculate_pokemon = function(seed1, seed2, tid, sid, shiny_filter, encounter_type, shiny_charm, nature_filter, ability_filter, min, max) {\n    uint64CvtShim[0] = seed1;\n    const low0 = u32CvtShim[0];\n    const high0 = u32CvtShim[1];\n    uint64CvtShim[0] = seed2;\n    const low1 = u32CvtShim[0];\n    const high1 = u32CvtShim[1];\n    const ret = wasm.calculate_pokemon(low0, high0, low1, high1, tid, sid, shiny_filter, encounter_type, shiny_charm, nature_filter, ability_filter, min, max);\n    return takeObject(ret);\n}\n\n/**\n* @param {number} seed1\n* @param {number} seed2\n* @param {number} seed3\n* @param {number} seed4\n* @param {number} shiny_filter\n* @param {number} min\n* @param {number} max\n* @param {number} delay\n* @param {Uint32Array} nature_filter\n* @param {number} ability_filter\n* @param {number} gender_ratio\n* @param {number} gender_filter\n* @param {boolean} set_ivs\n* @param {Uint32Array} min_ivs\n* @param {Uint32Array} max_ivs\n* @param {number} lead\n* @returns {any}\n*/\n__exports. calculate_pokemon_bdsp_stationary = function(seed1, seed2, seed3, seed4, shiny_filter, min, max, delay, nature_filter, ability_filter, gender_ratio, gender_filter, set_ivs, min_ivs, max_ivs, lead) {\n    const ptr0 = passArray32ToWasm0(nature_filter, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passArray32ToWasm0(min_ivs, wasm.__wbindgen_malloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passArray32ToWasm0(max_ivs, wasm.__wbindgen_malloc);\n    const len2 = WASM_VECTOR_LEN;\n    const ret = wasm.calculate_pokemon_bdsp_stationary(seed1, seed2, seed3, seed4, shiny_filter, min, max, delay, ptr0, len0, ability_filter, gender_ratio, gender_filter, set_ivs, ptr1, len1, ptr2, len2, lead);\n    return takeObject(ret);\n}\n\n/**\n* @param {number} seed1\n* @param {number} seed2\n* @param {number} seed3\n* @param {number} seed4\n* @param {number} shiny_filter\n* @param {number} min\n* @param {number} max\n* @param {number} delay\n* @param {Uint32Array} nature_filter\n* @param {number} ability_filter\n* @param {number} _encounter_filter\n* @param {number} gender_ratio\n* @param {number} gender_filter\n* @param {number} tiles\n* @param {boolean} large_room\n* @param {boolean} diglett_boost\n* @param {Uint32Array} min_ivs\n* @param {Uint32Array} max_ivs\n* @returns {any}\n*/\n__exports. calculate_pokemon_bdsp_underground = function(seed1, seed2, seed3, seed4, shiny_filter, min, max, delay, nature_filter, ability_filter, _encounter_filter, gender_ratio, gender_filter, tiles, large_room, diglett_boost, min_ivs, max_ivs) {\n    const ptr0 = passArray32ToWasm0(nature_filter, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passArray32ToWasm0(min_ivs, wasm.__wbindgen_malloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passArray32ToWasm0(max_ivs, wasm.__wbindgen_malloc);\n    const len2 = WASM_VECTOR_LEN;\n    const ret = wasm.calculate_pokemon_bdsp_underground(seed1, seed2, seed3, seed4, shiny_filter, min, max, delay, ptr0, len0, ability_filter, _encounter_filter, gender_ratio, gender_filter, tiles, large_room, diglett_boost, ptr1, len1, ptr2, len2);\n    return takeObject(ret);\n}\n\n/**\n* @param {number} seed1\n* @param {number} seed2\n* @param {number} seed3\n* @param {number} seed4\n* @param {number} min\n* @param {number} max\n* @param {Uint32Array} id\n* @param {any} filter_type\n* @returns {any}\n*/\n__exports. calculate_tid = function(seed1, seed2, seed3, seed4, min, max, id, filter_type) {\n    const ptr0 = passArray32ToWasm0(id, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.calculate_tid(seed1, seed2, seed3, seed4, min, max, ptr0, len0, addHeapObject(filter_type));\n    return takeObject(ret);\n}\n\n/**\n* @param {number} seed1\n* @param {number} seed2\n* @param {number} seed3\n* @param {number} seed4\n* @param {number} shiny_filter\n* @param {number} min\n* @param {number} max\n* @param {number} delay\n* @param {Uint32Array} nature_filter\n* @param {number} ability_filter\n* @param {number} gender_ratio\n* @param {number} gender_filter\n* @param {boolean} set_ivs\n* @param {Uint32Array} min_ivs\n* @param {Uint32Array} max_ivs\n* @returns {any}\n*/\n__exports. calculate_pokemon_bdsp_roamer = function(seed1, seed2, seed3, seed4, shiny_filter, min, max, delay, nature_filter, ability_filter, gender_ratio, gender_filter, set_ivs, min_ivs, max_ivs) {\n    const ptr0 = passArray32ToWasm0(nature_filter, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passArray32ToWasm0(min_ivs, wasm.__wbindgen_malloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passArray32ToWasm0(max_ivs, wasm.__wbindgen_malloc);\n    const len2 = WASM_VECTOR_LEN;\n    const ret = wasm.calculate_pokemon_bdsp_roamer(seed1, seed2, seed3, seed4, shiny_filter, min, max, delay, ptr0, len0, ability_filter, gender_ratio, gender_filter, set_ivs, ptr1, len1, ptr2, len2);\n    return takeObject(ret);\n}\n\n/**\n*/\n__exports.LeadFilter = Object.freeze({ None:0,\"0\":\"None\",Synchronize:1,\"1\":\"Synchronize\", });\n/**\n*/\n__exports.AbilityFilter = Object.freeze({ Any:3,\"3\":\"Any\",Ability0:0,\"0\":\"Ability0\",Ability1:1,\"1\":\"Ability1\", });\n/**\n*/\n__exports.Ability = Object.freeze({ Ability0:0,\"0\":\"Ability0\",Ability1:1,\"1\":\"Ability1\", });\n/**\n*/\n__exports.NatureFilter = Object.freeze({ Hardy:0,\"0\":\"Hardy\",Lonely:1,\"1\":\"Lonely\",Brave:2,\"2\":\"Brave\",Adamant:3,\"3\":\"Adamant\",Naughty:4,\"4\":\"Naughty\",Bold:5,\"5\":\"Bold\",Docile:6,\"6\":\"Docile\",Relaxed:7,\"7\":\"Relaxed\",Impish:8,\"8\":\"Impish\",Lax:9,\"9\":\"Lax\",Timid:10,\"10\":\"Timid\",Hasty:11,\"11\":\"Hasty\",Serious:12,\"12\":\"Serious\",Jolly:13,\"13\":\"Jolly\",Naive:14,\"14\":\"Naive\",Modest:15,\"15\":\"Modest\",Mild:16,\"16\":\"Mild\",Quiet:17,\"17\":\"Quiet\",Bashful:18,\"18\":\"Bashful\",Rash:19,\"19\":\"Rash\",Calm:20,\"20\":\"Calm\",Gentle:21,\"21\":\"Gentle\",Sassy:22,\"22\":\"Sassy\",Careful:23,\"23\":\"Careful\",Quirky:24,\"24\":\"Quirky\",Any:25,\"25\":\"Any\", });\n/**\n*/\n__exports.Nature = Object.freeze({ Hardy:0,\"0\":\"Hardy\",Lonely:1,\"1\":\"Lonely\",Brave:2,\"2\":\"Brave\",Adamant:3,\"3\":\"Adamant\",Naughty:4,\"4\":\"Naughty\",Bold:5,\"5\":\"Bold\",Docile:6,\"6\":\"Docile\",Relaxed:7,\"7\":\"Relaxed\",Impish:8,\"8\":\"Impish\",Lax:9,\"9\":\"Lax\",Timid:10,\"10\":\"Timid\",Hasty:11,\"11\":\"Hasty\",Serious:12,\"12\":\"Serious\",Jolly:13,\"13\":\"Jolly\",Naive:14,\"14\":\"Naive\",Modest:15,\"15\":\"Modest\",Mild:16,\"16\":\"Mild\",Quiet:17,\"17\":\"Quiet\",Bashful:18,\"18\":\"Bashful\",Rash:19,\"19\":\"Rash\",Calm:20,\"20\":\"Calm\",Gentle:21,\"21\":\"Gentle\",Sassy:22,\"22\":\"Sassy\",Careful:23,\"23\":\"Careful\",Quirky:24,\"24\":\"Quirky\",Synchronize:25,\"25\":\"Synchronize\", });\n/**\n*/\n__exports.ShinyFilter = Object.freeze({ None:0,\"0\":\"None\",Star:1,\"1\":\"Star\",Square:2,\"2\":\"Square\",Both:3,\"3\":\"Both\",Any:4,\"4\":\"Any\", });\n/**\n*/\n__exports.EncounterFilter = Object.freeze({ Static:0,\"0\":\"Static\",Dynamic:1,\"1\":\"Dynamic\", });\n/**\n*/\n__exports.Shiny = Object.freeze({ None:0,\"0\":\"None\",Star:1,\"1\":\"Star\",Square:2,\"2\":\"Square\",Both:3,\"3\":\"Both\",All:4,\"4\":\"All\", });\n/**\n*/\n__exports.EncounterSlotFilter = Object.freeze({ Any:12,\"12\":\"Any\",Slot0:0,\"0\":\"Slot0\",Slot1:1,\"1\":\"Slot1\",Slot2:2,\"2\":\"Slot2\",Slot3:3,\"3\":\"Slot3\",Slot4:4,\"4\":\"Slot4\",Slot5:5,\"5\":\"Slot5\",Slot6:6,\"6\":\"Slot6\",Slot7:7,\"7\":\"Slot7\",Slot8:8,\"8\":\"Slot8\",Slot9:9,\"9\":\"Slot9\",Slot10:10,\"10\":\"Slot10\",Slot11:11,\"11\":\"Slot11\", });\n/**\n*/\n__exports.EncounterSlot = Object.freeze({ Slot0:0,\"0\":\"Slot0\",Slot1:1,\"1\":\"Slot1\",Slot2:2,\"2\":\"Slot2\",Slot3:3,\"3\":\"Slot3\",Slot4:4,\"4\":\"Slot4\",Slot5:5,\"5\":\"Slot5\",Slot6:6,\"6\":\"Slot6\",Slot7:7,\"7\":\"Slot7\",Slot8:8,\"8\":\"Slot8\",Slot9:9,\"9\":\"Slot9\",Slot10:10,\"10\":\"Slot10\",Slot11:11,\"11\":\"Slot11\", });\n/**\n*/\n__exports.GenderRatio = Object.freeze({ NoSetGender:256,\"256\":\"NoSetGender\",Genderless:255,\"255\":\"Genderless\",Male50Female50:127,\"127\":\"Male50Female50\",Male25Female75:191,\"191\":\"Male25Female75\",Male75Female25:63,\"63\":\"Male75Female25\",Male875Female125:31,\"31\":\"Male875Female125\",Male:0,\"0\":\"Male\",Female:254,\"254\":\"Female\", });\n/**\n*/\n__exports.Gender = Object.freeze({ Genderless:255,\"255\":\"Genderless\",Male:0,\"0\":\"Male\",Female:254,\"254\":\"Female\", });\n/**\n*/\n__exports.GenderFilter = Object.freeze({ Any:256,\"256\":\"Any\",Male:0,\"0\":\"Male\",Female:254,\"254\":\"Female\", });\n/**\n*/\nclass  Pokemon {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_pokemon_free(ptr);\n    }\n    /**\n    */\n    get shiny_value() {\n        const ret = wasm.__wbg_get_pokemon_shiny_value(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set shiny_value(arg0) {\n        wasm.__wbg_set_pokemon_shiny_value(this.ptr, arg0);\n    }\n    /**\n    */\n    get pid() {\n        const ret = wasm.__wbg_get_pokemon_pid(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set pid(arg0) {\n        wasm.__wbg_set_pokemon_pid(this.ptr, arg0);\n    }\n    /**\n    */\n    get ec() {\n        const ret = wasm.__wbg_get_pokemon_ec(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set ec(arg0) {\n        wasm.__wbg_set_pokemon_ec(this.ptr, arg0);\n    }\n    /**\n    */\n    get nature() {\n        const ret = wasm.__wbg_get_pokemon_nature(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set nature(arg0) {\n        wasm.__wbg_set_pokemon_nature(this.ptr, arg0);\n    }\n    /**\n    */\n    get ivs() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.__wbg_get_pokemon_ivs(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU32FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 4);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint32Array} arg0\n    */\n    set ivs(arg0) {\n        const ptr0 = passArray32ToWasm0(arg0, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.__wbg_set_pokemon_ivs(this.ptr, ptr0, len0);\n    }\n    /**\n    */\n    get ability() {\n        const ret = wasm.__wbg_get_pokemon_ability(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set ability(arg0) {\n        wasm.__wbg_set_pokemon_ability(this.ptr, arg0);\n    }\n    /**\n    */\n    get gender() {\n        const ret = wasm.__wbg_get_pokemon_gender(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set gender(arg0) {\n        wasm.__wbg_set_pokemon_gender(this.ptr, arg0);\n    }\n    /**\n    */\n    get encounter() {\n        const ret = wasm.__wbg_get_pokemon_encounter(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set encounter(arg0) {\n        wasm.__wbg_set_pokemon_encounter(this.ptr, arg0);\n    }\n    /**\n    */\n    get advances() {\n        const ret = wasm.__wbg_get_pokemon_advances(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set advances(arg0) {\n        wasm.__wbg_set_pokemon_advances(this.ptr, arg0);\n    }\n    /**\n    */\n    get is_rare() {\n        const ret = wasm.__wbg_get_pokemon_is_rare(this.ptr);\n        return ret !== 0;\n    }\n    /**\n    * @param {boolean} arg0\n    */\n    set is_rare(arg0) {\n        wasm.__wbg_set_pokemon_is_rare(this.ptr, arg0);\n    }\n}\n/**\n*/\nclass  Result {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_result_free(ptr);\n    }\n    /**\n    */\n    get state0() {\n        const ret = wasm.__wbg_get_result_state0(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set state0(arg0) {\n        wasm.__wbg_set_result_state0(this.ptr, arg0);\n    }\n    /**\n    */\n    get state1() {\n        const ret = wasm.__wbg_get_result_state1(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set state1(arg0) {\n        wasm.__wbg_set_result_state1(this.ptr, arg0);\n    }\n    /**\n    */\n    get state2() {\n        const ret = wasm.__wbg_get_result_state2(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set state2(arg0) {\n        wasm.__wbg_set_result_state2(this.ptr, arg0);\n    }\n    /**\n    */\n    get state3() {\n        const ret = wasm.__wbg_get_result_state3(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set state3(arg0) {\n        wasm.__wbg_set_result_state3(this.ptr, arg0);\n    }\n    /**\n    */\n    get advances() {\n        const ret = wasm.__wbg_get_result_advances(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set advances(arg0) {\n        wasm.__wbg_set_result_advances(this.ptr, arg0);\n    }\n    /**\n    */\n    get shiny_value() {\n        const ret = wasm.__wbg_get_result_shiny_value(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set shiny_value(arg0) {\n        wasm.__wbg_set_result_shiny_value(this.ptr, arg0);\n    }\n    /**\n    */\n    get pid() {\n        const ret = wasm.__wbg_get_result_pid(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set pid(arg0) {\n        wasm.__wbg_set_result_pid(this.ptr, arg0);\n    }\n    /**\n    */\n    get ec() {\n        const ret = wasm.__wbg_get_result_ec(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set ec(arg0) {\n        wasm.__wbg_set_result_ec(this.ptr, arg0);\n    }\n    /**\n    */\n    get nature() {\n        const ret = wasm.__wbg_get_result_nature(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set nature(arg0) {\n        wasm.__wbg_set_result_nature(this.ptr, arg0);\n    }\n    /**\n    */\n    get ivs() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.__wbg_get_result_ivs(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU32FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 4);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint32Array} arg0\n    */\n    set ivs(arg0) {\n        const ptr0 = passArray32ToWasm0(arg0, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.__wbg_set_result_ivs(this.ptr, ptr0, len0);\n    }\n    /**\n    */\n    get ability() {\n        const ret = wasm.__wbg_get_result_ability(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set ability(arg0) {\n        wasm.__wbg_set_result_ability(this.ptr, arg0);\n    }\n    /**\n    */\n    get gender() {\n        const ret = wasm.__wbg_get_result_gender(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set gender(arg0) {\n        wasm.__wbg_set_result_gender(this.ptr, arg0);\n    }\n    /**\n    */\n    get encounter() {\n        const ret = wasm.__wbg_get_result_encounter(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set encounter(arg0) {\n        wasm.__wbg_set_result_encounter(this.ptr, arg0);\n    }\n}\n/**\n*/\nclass  ShinyResult {\n\n    static __wrap(ptr) {\n        const obj = Object.create(ShinyResult.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_shinyresult_free(ptr);\n    }\n    /**\n    */\n    get state0() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.__wbg_get_shinyresult_state0(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            u32CvtShim[0] = r0;\n            u32CvtShim[1] = r1;\n            const n0 = uint64CvtShim[0];\n            return n0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {BigInt} arg0\n    */\n    set state0(arg0) {\n        uint64CvtShim[0] = arg0;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        wasm.__wbg_set_shinyresult_state0(this.ptr, low0, high0);\n    }\n    /**\n    */\n    get state1() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.__wbg_get_shinyresult_state1(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            u32CvtShim[0] = r0;\n            u32CvtShim[1] = r1;\n            const n0 = uint64CvtShim[0];\n            return n0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {BigInt} arg0\n    */\n    set state1(arg0) {\n        uint64CvtShim[0] = arg0;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        wasm.__wbg_set_shinyresult_state1(this.ptr, low0, high0);\n    }\n    /**\n    */\n    get advances() {\n        const ret = wasm.__wbg_get_shinyresult_advances(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set advances(arg0) {\n        wasm.__wbg_set_shinyresult_advances(this.ptr, arg0);\n    }\n    /**\n    */\n    get shiny_value() {\n        const ret = wasm.__wbg_get_shinyresult_shiny_value(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set shiny_value(arg0) {\n        wasm.__wbg_set_shinyresult_shiny_value(this.ptr, arg0);\n    }\n    /**\n    */\n    get ec() {\n        const ret = wasm.__wbg_get_shinyresult_ec(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set ec(arg0) {\n        wasm.__wbg_set_shinyresult_ec(this.ptr, arg0);\n    }\n    /**\n    */\n    get pid() {\n        const ret = wasm.__wbg_get_shinyresult_pid(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set pid(arg0) {\n        wasm.__wbg_set_shinyresult_pid(this.ptr, arg0);\n    }\n    /**\n    */\n    get nature() {\n        const ret = wasm.__wbg_get_shinyresult_nature(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set nature(arg0) {\n        wasm.__wbg_set_shinyresult_nature(this.ptr, arg0);\n    }\n    /**\n    */\n    get ability() {\n        const ret = wasm.__wbg_get_shinyresult_ability(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set ability(arg0) {\n        wasm.__wbg_set_shinyresult_ability(this.ptr, arg0);\n    }\n}\n/**\n*/\nclass  ShinyResultBdspStationary {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_shinyresultbdspstationary_free(ptr);\n    }\n    /**\n    */\n    get state0() {\n        const ret = wasm.__wbg_get_shinyresultbdspstationary_state0(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set state0(arg0) {\n        wasm.__wbg_set_shinyresultbdspstationary_state0(this.ptr, arg0);\n    }\n    /**\n    */\n    get state1() {\n        const ret = wasm.__wbg_get_shinyresultbdspstationary_state1(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set state1(arg0) {\n        wasm.__wbg_set_shinyresultbdspstationary_state1(this.ptr, arg0);\n    }\n    /**\n    */\n    get state2() {\n        const ret = wasm.__wbg_get_shinyresultbdspstationary_state2(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set state2(arg0) {\n        wasm.__wbg_set_shinyresultbdspstationary_state2(this.ptr, arg0);\n    }\n    /**\n    */\n    get state3() {\n        const ret = wasm.__wbg_get_shinyresultbdspstationary_state3(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set state3(arg0) {\n        wasm.__wbg_set_shinyresultbdspstationary_state3(this.ptr, arg0);\n    }\n    /**\n    */\n    get advances() {\n        const ret = wasm.__wbg_get_shinyresultbdspstationary_advances(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set advances(arg0) {\n        wasm.__wbg_set_shinyresultbdspstationary_advances(this.ptr, arg0);\n    }\n    /**\n    */\n    get shiny_value() {\n        const ret = wasm.__wbg_get_shinyresultbdspstationary_shiny_value(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set shiny_value(arg0) {\n        wasm.__wbg_set_shinyresultbdspstationary_shiny_value(this.ptr, arg0);\n    }\n    /**\n    */\n    get pid() {\n        const ret = wasm.__wbg_get_shinyresultbdspstationary_pid(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set pid(arg0) {\n        wasm.__wbg_set_shinyresultbdspstationary_pid(this.ptr, arg0);\n    }\n    /**\n    */\n    get ec() {\n        const ret = wasm.__wbg_get_shinyresultbdspstationary_ec(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set ec(arg0) {\n        wasm.__wbg_set_shinyresultbdspstationary_ec(this.ptr, arg0);\n    }\n    /**\n    */\n    get nature() {\n        const ret = wasm.__wbg_get_shinyresultbdspstationary_nature(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set nature(arg0) {\n        wasm.__wbg_set_shinyresultbdspstationary_nature(this.ptr, arg0);\n    }\n    /**\n    */\n    get ivs() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.__wbg_get_shinyresultbdspstationary_ivs(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU32FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 4);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint32Array} arg0\n    */\n    set ivs(arg0) {\n        const ptr0 = passArray32ToWasm0(arg0, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.__wbg_set_shinyresultbdspstationary_ivs(this.ptr, ptr0, len0);\n    }\n    /**\n    */\n    get ability() {\n        const ret = wasm.__wbg_get_shinyresultbdspstationary_ability(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set ability(arg0) {\n        wasm.__wbg_set_shinyresultbdspstationary_ability(this.ptr, arg0);\n    }\n    /**\n    */\n    get gender() {\n        const ret = wasm.__wbg_get_shinyresultbdspstationary_gender(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set gender(arg0) {\n        wasm.__wbg_set_shinyresultbdspstationary_gender(this.ptr, arg0);\n    }\n}\n/**\n*/\nclass  TIDResult {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_tidresult_free(ptr);\n    }\n    /**\n    */\n    get state0() {\n        const ret = wasm.__wbg_get_tidresult_state0(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set state0(arg0) {\n        wasm.__wbg_set_tidresult_state0(this.ptr, arg0);\n    }\n    /**\n    */\n    get state1() {\n        const ret = wasm.__wbg_get_tidresult_state1(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set state1(arg0) {\n        wasm.__wbg_set_tidresult_state1(this.ptr, arg0);\n    }\n    /**\n    */\n    get state2() {\n        const ret = wasm.__wbg_get_tidresult_state2(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set state2(arg0) {\n        wasm.__wbg_set_tidresult_state2(this.ptr, arg0);\n    }\n    /**\n    */\n    get state3() {\n        const ret = wasm.__wbg_get_tidresult_state3(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set state3(arg0) {\n        wasm.__wbg_set_tidresult_state3(this.ptr, arg0);\n    }\n    /**\n    */\n    get advances() {\n        const ret = wasm.__wbg_get_tidresult_advances(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set advances(arg0) {\n        wasm.__wbg_set_tidresult_advances(this.ptr, arg0);\n    }\n    /**\n    */\n    get tid() {\n        const ret = wasm.__wbg_get_tidresult_tid(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set tid(arg0) {\n        wasm.__wbg_set_tidresult_tid(this.ptr, arg0);\n    }\n    /**\n    */\n    get tsv() {\n        const ret = wasm.__wbg_get_tidresult_tsv(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set tsv(arg0) {\n        wasm.__wbg_set_tidresult_tsv(this.ptr, arg0);\n    }\n    /**\n    */\n    get g8tid() {\n        const ret = wasm.__wbg_get_tidresult_g8tid(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set g8tid(arg0) {\n        wasm.__wbg_set_tidresult_g8tid(this.ptr, arg0);\n    }\n    /**\n    */\n    get sid() {\n        const ret = wasm.__wbg_get_tidresult_sid(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set sid(arg0) {\n        wasm.__wbg_set_tidresult_sid(this.ptr, arg0);\n    }\n    /**\n    */\n    get filter_type() {\n        const ret = wasm.__wbg_get_tidresult_filter_type(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @param {any} arg0\n    */\n    set filter_type(arg0) {\n        wasm.__wbg_set_tidresult_filter_type(this.ptr, addHeapObject(arg0));\n    }\n}\n/**\n*/\nclass  Xoroshiro {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_xoroshiro_free(ptr);\n    }\n}\n/**\n*/\nclass  Xorshift {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_xorshift_free(ptr);\n    }\n}\n\n__exports. __wbindgen_json_serialize = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    const ret = JSON.stringify(obj === undefined ? null : obj);\n    const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\n__exports. __wbindgen_json_parse = function(arg0, arg1) {\n    const ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\n__exports. __wbindgen_string_new = function(arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\n__exports. __wbg_new_94fb1279cf6afea5 = function() {\n    const ret = new Array();\n    return addHeapObject(ret);\n};\n\n__exports. __wbg_shinyresult_new = function(arg0) {\n    const ret = ShinyResult.__wrap(arg0);\n    return addHeapObject(ret);\n};\n\n__exports. __wbg_push_40c6a90f1805aa90 = function(arg0, arg1) {\n    const ret = getObject(arg0).push(getObject(arg1));\n    return ret;\n};\n\n__exports. __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\n__exports. __wbg_new_693216e109162396 = function() {\n    const ret = new Error();\n    return addHeapObject(ret);\n};\n\n__exports. __wbg_stack_0ddaca5d1abfb52f = function(arg0, arg1) {\n    const ret = getObject(arg1).stack;\n    const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\n__exports. __wbg_error_09919627ac0992f5 = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\n__exports. __wbindgen_string_get = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    const ret = typeof(obj) === 'string' ? obj : undefined;\n    var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\n__exports. __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n__exports. Pokemon =  Pokemon;\n__exports. Result =  Result;\n__exports. ShinyResult =  ShinyResult;\n__exports. ShinyResultBdspStationary =  ShinyResultBdspStationary;\n__exports. TIDResult =  TIDResult;\n__exports. Xoroshiro =  Xoroshiro;\n__exports. Xorshift =  Xorshift;\n      function init(wasm_path) {\n          const fetchPromise = fetch(wasm_path);\n          let resultPromise;\n          if (typeof WebAssembly.instantiateStreaming === 'function') {\n              resultPromise = WebAssembly.instantiateStreaming(fetchPromise, { './wasm_bg.js': __exports });\n          } else {\n              resultPromise = fetchPromise\n              .then(response => response.arrayBuffer())\n              .then(buffer => WebAssembly.instantiate(buffer, { './wasm_bg.js': __exports }));\n          }\n          return resultPromise.then(({instance}) => {\n              wasm = init.wasm = instance.exports;\n              __exports.wasm = wasm;\n              return;\n          });\n      };\n      function init_node(wasm_path) {\n          const fs = require('fs');\n          return new Promise(function(resolve, reject) {\n              fs.readFile(__dirname + wasm_path, function(err, data) {\n                  if (err) {\n                      reject(err);\n                  } else {\n                      resolve(data.buffer);\n                  }\n              });\n          })\n          .then(data => WebAssembly.instantiate(data, { './wasm_bg': __exports }))\n          .then(({instance}) => {\n              wasm = init.wasm = instance.exports;\n              __exports.wasm = wasm;\n              return;\n          });\n      }\n      const wasm_bindgen = Object.assign(false ? init_node : init, __exports);\n      module.exports = function loadWASMBundle(bundle) {\n            return wasm_bindgen(bundle).then(() => __exports)\n      }\n    "]}